# Generated by Django 4.1.6 on 2023-07-02 13:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('u_name', models.CharField(max_length=100)),
                ('u_email', models.EmailField(max_length=100, primary_key=True, serialize=False)),
                ('u_gender', models.CharField(blank=True, max_length=40, null=True)),
                ('u_department', models.CharField(blank=True, max_length=50, null=True)),
                ('u_password', models.CharField(max_length=100)),
                ('u_contactNo', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format 00923XX-XXX-XXXX', regex='^((\\+92)|(0092))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$')])),
                ('u_profile_pic', models.FileField(default=None, null=True, upload_to='StoreProfilePic/')),
                ('u_city', models.CharField(max_length=30, null=True)),
                ('id', models.IntegerField()),
            ],
            options={
                'db_table': 'Admin',
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='certificates/')),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('c_name', models.CharField(max_length=100)),
                ('c_code', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('max_numb_students', models.CharField(max_length=65)),
                ('c_semester', models.CharField(max_length=100)),
                ('c_section', models.CharField(max_length=100)),
                ('c_type', models.CharField(max_length=40)),
                ('id', models.IntegerField()),
            ],
            options={
                'db_table': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('u_name', models.CharField(max_length=100)),
                ('u_email', models.EmailField(max_length=100, primary_key=True, serialize=False)),
                ('u_gender', models.CharField(blank=True, max_length=40, null=True)),
                ('u_department', models.CharField(blank=True, max_length=50, null=True)),
                ('u_password', models.CharField(max_length=100)),
                ('u_contactNo', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format 00923XX-XXX-XXXX', regex='^((\\+92)|(0092))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$')])),
                ('u_profile_pic', models.FileField(default=None, null=True, upload_to='StoreProfilePic/')),
                ('u_city', models.CharField(max_length=30, null=True)),
                ('id', models.IntegerField()),
                ('f_startTimePref', models.TimeField(blank=True, null=True)),
                ('f_endTimePref', models.TimeField(blank=True, null=True)),
                ('f_RoomPref', models.CharField(blank=True, max_length=100, null=True)),
                ('f_CoursePref', models.CharField(max_length=40, null=True)),
                ('f_ApprovalStatus', models.CharField(blank=True, max_length=100, null=True)),
                ('f_Comment', models.CharField(blank=True, max_length=100, null=True)),
                ('f_certificates', models.ManyToManyField(to='ATG.certificate')),
                ('f_courses', models.ManyToManyField(blank=True, related_name='course_instructors', to='ATG.courses')),
            ],
            options={
                'db_table': 'Faculty',
            },
        ),
        migrations.CreateModel(
            name='FreferenceEnable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDatetime', models.DateTimeField(null=True)),
                ('endDatetime', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'freferenceenable',
            },
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(default=None, max_length=20)),
            ],
            options={
                'db_table': 'help',
            },
        ),
        migrations.CreateModel(
            name='Meetings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(max_length=50)),
                ('day', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'Meetings',
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('r_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('r_type', models.EmailField(max_length=100)),
                ('r_department', models.CharField(max_length=20)),
                ('r_capacity', models.CharField(max_length=100)),
                ('id', models.IntegerField()),
            ],
            options={
                'db_table': 'Rooms',
            },
        ),
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('section_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('id', models.IntegerField()),
                ('courses', models.ManyToManyField(to='ATG.courses')),
            ],
            options={
                'db_table': 'Sections',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('u_name', models.CharField(max_length=100)),
                ('u_email', models.EmailField(max_length=100, primary_key=True, serialize=False)),
                ('u_gender', models.CharField(blank=True, max_length=40, null=True)),
                ('u_department', models.CharField(blank=True, max_length=50, null=True)),
                ('u_password', models.CharField(max_length=100)),
                ('u_contactNo', models.CharField(max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format 00923XX-XXX-XXXX', regex='^((\\+92)|(0092))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$')])),
                ('u_profile_pic', models.FileField(default=None, null=True, upload_to='StoreProfilePic/')),
                ('u_city', models.CharField(max_length=30, null=True)),
                ('id', models.IntegerField()),
                ('s_session', models.CharField(max_length=20)),
                ('s_section', models.CharField(max_length=50)),
                ('s_semester', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'Students',
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Department', models.CharField(max_length=30)),
                ('Section', models.CharField(max_length=30)),
                ('Shift', models.CharField(max_length=30)),
                ('StartTime', models.CharField(max_length=30)),
                ('OffTime', models.CharField(max_length=30)),
                ('SlotTime', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'Table',
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('v_email', models.EmailField(max_length=100, primary_key=True, serialize=False)),
                ('v_password', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Semesters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_no', models.CharField(max_length=25)),
                ('num_class_in_week', models.IntegerField(default=0)),
                ('courses', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ATG.courses')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ATG.faculty')),
                ('meeting_time', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ATG.meetings')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ATG.rooms')),
                ('sem_section', models.ForeignKey(db_column='section_name', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='sem_section', to='ATG.sections')),
            ],
            options={
                'db_table': 'Semesters',
            },
        ),
        migrations.AddField(
            model_name='courses',
            name='instructors',
            field=models.ManyToManyField(blank=True, to='ATG.faculty'),
        ),
        migrations.CreateModel(
            name='CourseFaculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject', to='ATG.courses')),
                ('Teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Teacher', to='ATG.faculty')),
            ],
            options={
                'db_table': 'CourseFaculty',
            },
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_semester', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='class_semester', to='ATG.semesters')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course', to='ATG.courses')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructor', to='ATG.faculty')),
                ('meeting_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_time', to='ATG.meetings')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room', to='ATG.rooms')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section', to='ATG.sections')),
            ],
            options={
                'db_table': 'Classes',
            },
        ),
        migrations.AlterUniqueTogether(
            name='courses',
            unique_together={('c_name', 'c_code')},
        ),
    ]
